{"ast":null,"code":"var _jsxFileName = \"/home/dohelo/GitHub/FCC-JSCalculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport './react-components/CalculatorButton.js';\nimport CalculatorButton from './react-components/CalculatorButton.js';\nimport DisplayCalculator from './react-components/DisplayCalculator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // user stories data for requirements id's and text to display\n  let buttonsData = [{\n    textToShow: \"=\",\n    buttonId: \"equals\"\n  }, {\n    textToShow: \"/\",\n    buttonId: \"divide\"\n  }, {\n    textToShow: \"X\",\n    buttonId: \"multiply\"\n  }, {\n    textToShow: \"-\",\n    buttonId: \"substract\"\n  }, {\n    textToShow: \"+\",\n    buttonId: \"add\"\n  }, {\n    textToShow: \"C\",\n    buttonId: \"clear\"\n  }, {\n    textToShow: \".\",\n    buttonId: \"decimal\"\n  }, {\n    textToShow: \"0\",\n    buttonId: \"zero\"\n  }, {\n    textToShow: \"1\",\n    buttonId: \"one\"\n  }, {\n    textToShow: \"2\",\n    buttonId: \"two\"\n  }, {\n    textToShow: \"3\",\n    buttonId: \"three\"\n  }, {\n    textToShow: \"4\",\n    buttonId: \"four\"\n  }, {\n    textToShow: \"5\",\n    buttonId: \"five\"\n  }, {\n    textToShow: \"6\",\n    buttonId: \"six\"\n  }, {\n    textToShow: \"7\",\n    buttonId: \"seven\"\n  }, {\n    textToShow: \"8\",\n    buttonId: \"eight\"\n  }, {\n    textToShow: \"9\",\n    buttonId: \"nine\"\n  }]; // State for the calculator \n\n  let [CalculatorState, setCalculatorState] = useState({\n    display: \"0\"\n  }); // generate JSX for all buttons from buttonsData. 17 total\n\n  let renderButtons = buttonsData.map(item => /*#__PURE__*/_jsxDEV(CalculatorButton, {\n    showText: item.textToShow,\n    idButton: item.buttonId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 49\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(DisplayCalculator, {\n        textToDisplay: CalculatorState.display,\n        className: \"display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonsContainer\",\n        children: renderButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NH3vDToXrQUU5JEyfH3rALuaIlg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dohelo/GitHub/FCC-JSCalculator/src/App.js"],"names":["useState","CalculatorButton","DisplayCalculator","App","buttonsData","textToShow","buttonId","CalculatorState","setCalculatorState","display","renderButtons","map","item"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,6BAAzB;AACA,OAAO,WAAP;AACA,OAAO,wCAAP;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,MAAIC,WAAW,GAAG,CAChB;AAAEC,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GADgB,EAEhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAFgB,EAGhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAHgB,EAIhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAJgB,EAKhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GALgB,EAMhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GANgB,EAOhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAPgB,EAQhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GARgB,EAShB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GATgB,EAUhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAVgB,EAWhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAXgB,EAYhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAZgB,EAahB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAbgB,EAchB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAdgB,EAehB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAfgB,EAgBhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAhBgB,EAiBhB;AAAED,IAAAA,UAAU,EAAE,GAAd;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAjBgB,CAAlB,CAFa,CAsBb;;AACA,MAAI,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAClD;AACES,IAAAA,OAAO,EAAE;AADX,GADkD,CAApD,CAvBa,CA6Bb;;AACA,MAAIC,aAAa,GAAGN,WAAW,CAACO,GAAZ,CAAgBC,IAAI,iBAAM,QAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEA,IAAI,CAACP,UAAjC;AAA6C,IAAA,QAAQ,EAAEO,IAAI,CAACN;AAA5D;AAAA;AAAA;AAAA;AAAA,UAA1B,CAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,iBAAD;AAAmB,QAAA,aAAa,EAAEC,eAAe,CAACE,OAAlD;AAA2D,QAAA,SAAS,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA1CQP,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport './react-components/CalculatorButton.js';\nimport CalculatorButton from './react-components/CalculatorButton.js';\nimport DisplayCalculator from './react-components/DisplayCalculator.js';\n\nfunction App() {\n  // user stories data for requirements id's and text to display\n  let buttonsData = [\n    { textToShow: \"=\", buttonId: \"equals\" },\n    { textToShow: \"/\", buttonId: \"divide\" },\n    { textToShow: \"X\", buttonId: \"multiply\" },\n    { textToShow: \"-\", buttonId: \"substract\" },\n    { textToShow: \"+\", buttonId: \"add\" },\n    { textToShow: \"C\", buttonId: \"clear\" },\n    { textToShow: \".\", buttonId: \"decimal\" },\n    { textToShow: \"0\", buttonId: \"zero\" },\n    { textToShow: \"1\", buttonId: \"one\" },\n    { textToShow: \"2\", buttonId: \"two\" },\n    { textToShow: \"3\", buttonId: \"three\" },\n    { textToShow: \"4\", buttonId: \"four\" },\n    { textToShow: \"5\", buttonId: \"five\" },\n    { textToShow: \"6\", buttonId: \"six\" },\n    { textToShow: \"7\", buttonId: \"seven\" },\n    { textToShow: \"8\", buttonId: \"eight\" },\n    { textToShow: \"9\", buttonId: \"nine\" }\n  ];\n\n  // State for the calculator \n  let [CalculatorState, setCalculatorState] = useState(\n    {\n      display: \"0\"\n    }\n  );\n\n  // generate JSX for all buttons from buttonsData. 17 total\n  let renderButtons = buttonsData.map(item => ( <CalculatorButton showText={item.textToShow} idButton={item.buttonId} /> ));\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DisplayCalculator textToDisplay={CalculatorState.display} className=\"display\" />\n        <div className=\"buttonsContainer\">\n          {renderButtons}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}